from telebot import types
import ans


def kb_for_matan():
    lim_button = types.InlineKeyboardButton(Math.lim,
                                            callback_data=Math.lim)
    integral_button = types.InlineKeyboardButton(Math.integral,
                                                 callback_data=Math.integral)
    diff_button = types.InlineKeyboardButton(Math.diff,
                                             callback_data=Math.diff)
    back_button = types.InlineKeyboardButton("üî• " + ans.Answers.back,
                                             callback_data=ans.Answers.back + "back to sections")

    matan_markup = types.InlineKeyboardMarkup(row_width=1)
    matan_markup.add(lim_button, diff_button, integral_button, back_button)

    return matan_markup


def kb_for_linal():
    matrix_button = types.InlineKeyboardButton(Math.matrix,
                                               callback_data=Math.matrix)
    determinant_button = types.InlineKeyboardButton(Math.determinant,
                                                    callback_data=Math.determinant)
    clay_button = types.InlineKeyboardButton(Math.clay,
                                             callback_data=Math.clay)
    back_button = types.InlineKeyboardButton("üî• " + ans.Answers.back,
                                             callback_data=ans.Answers.back + "back to sections")

    linal_markup = types.InlineKeyboardMarkup(row_width=1)
    linal_markup.add(matrix_button, determinant_button, clay_button, back_button)

    return linal_markup


def kb_for_geom():
    scalar_button = types.InlineKeyboardButton(Math.scalar_product,
                                               callback_data=Math.scalar_product)
    plane_button = types.InlineKeyboardButton(Math.plane,
                                              callback_data=Math.plane)
    curves_button = types.InlineKeyboardButton(Math.curves,
                                               callback_data=Math.curves)
    back_button = types.InlineKeyboardButton("üî• " + ans.Answers.back,
                                             callback_data=ans.Answers.back + "back to sections")

    geom_markup = types.InlineKeyboardMarkup(row_width=1)
    geom_markup.add(scalar_button, plane_button, curves_button, back_button)

    return geom_markup


def start_kb_for_high_school():
    # section - –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∫–Ω–æ–ø–∫—É "—Ä–∞–∑–¥–µ–ª"

    sect_1_button = types.InlineKeyboardButton("üìà " + Math.matan,
                                               callback_data=Math.matan + "section")
    sect_2_button = types.InlineKeyboardButton("üìì " + Math.linal,
                                               callback_data=Math.linal + "section")
    sect_3_button = types.InlineKeyboardButton("üìê " + Math.geom,
                                               callback_data=Math.geom + "section")

    math_mark = types.InlineKeyboardMarkup(row_width=1)
    math_mark.add(sect_1_button, sect_2_button, sect_3_button)

    return math_mark


class Math:
    # —Ä–∞–∑–¥–µ–ª—ã
    matan = "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑."
    linal = "–õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞."
    geom = "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫—è –≥–µ–æ–º–µ—Ç—Ä–∏—è."

    # —Ç–µ–º—ã –º–∞—Ç–∞–Ω–∞
    lim = "–ü—Ä–µ–¥–µ–ª—ã."
    integral = "–ò–Ω—Ç–µ–≥—Ä–∞–ª—ã."
    diff = "–ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ."

    # —Ç–µ–º—ã –ª–∏–Ω–∞–ª–∞
    matrix = "–ú–∞—Ç—Ä–∏—Ü—ã."
    determinant = "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª–∏."
    clay = "–°–ª–∞—É."

    # —Ç–µ–º—ã –≥–µ–æ–º–µ—Ç—Ä–∏–∏
    scalar_product = "–°–∫–∞–ª—è—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ."
    curves = "–ö—Ä–∏–≤—ã–µ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏."
    plane = "–ü–ª–æ—Å–∫–æ—Å—Ç—å."

    math_ans = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:"
